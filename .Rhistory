devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::document()
usethis::use_package("R.utils",type="Imports")
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
usethis::use_package("S4Vectors",type="Imports")
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::check()
file.remove("R/zzz.R")
devtools::document()
devtools::check()
devtools::build()
paste0("Failed to obtain any TSS locus of genes from chromosome ",sub("chr", "", i),"..\n")
paste0("Successfully obtained " , length(focus_markers)," TSS loci of genes from chromosome " ),sub("chr", "", i)
paste0("Successfully obtained " , length(c(1))," TSS loci of genes from chromosome " ),sub("chr", "", i)
length(c(1))
paste0("Successfully obtained " , length(c(1))," TSS loci of genes from chromosome " ,sub("chr", "", i))
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
sessionInfo()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
?process_data
devtools::install()
?process_data
devtools::install()
?process_data
devtools::document()
devtools::install()
?process_data
file.copy("~/multiomic_small_atac_fragments.tsv.gz", "inst/extdata/multiomic_small_atac_fragments.tsv.gz")
file.copy("~/multiomic_small_atac_fragments.tsv.gz.tbi", "inst/extdata/multiomic_small_atac_fragments.tsv.gz.tbi")
load("~/multiomic_small.rda")
usethis::use_data(multiomic_small)
devtools::document()
devtools::install()
?process_data
file.copy("~/chr2.bed.gz", "inst/extdata/chr2/chr2.bed.gz")
dir.create("inst/extdata/chr2", recursive = TRUE)
file.copy("~/chr2.bed.gz", "inst/extdata/chr2/chr2.bed.gz")
devtools::document()
devtools::install()
fpath <- system.file("extdata", "multiomic_small_atac_fragments.tsv.gz", package="SCEGHiC")
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
gene=multiomic_small@assays[["RNA"]]@data@Dimnames[[1]]
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
fpath <- system.file("extdata", package="SCEGHiC")
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
gene=multiomic_small@assays[["RNA"]]@data@Dimnames[[1]]
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
View(weight)
results_SCEGHiC<- Run_SCEG_HiC(SCEGdata, weight,focus_gene=gene)
View(results_SCEGHiC)
results_SCEGHiC<-results_SCEGHiC[results_SCEGHiC$gene>0.01]
results_SCEGHiC<-results_SCEGHiC[results_SCEGHiC$gene>0.01,]
View(results_SCEGHiC)
results_SCEGHiC1<-results_SCEGHiC[results_SCEGHiC$score>0.01,]
View(results_SCEGHiC1)
View(weight)
weight[["IL1R1"]][["contact"]][["element1"]]
weight[["CHN1"]][["contact"]]
weight[["CHN1"]][["contact"]][["element1"]]
weight[["CHN1"]][["contact"]][["element2"]]
weight[["CHN1"]][["contact"]][["score"]]
View(SCEGdata)
View(results_SCEGHiC)
results_SCEGHiC[results_SCEGHiC$gene=="CTLA4",]
results_SCEGHiC[results_SCEGHiC$gene=="CTLA4"&results_SCEGHiC1$score>0.01,]
results_SCEGHiC1[results_SCEGHiC1$gene=="CTLA4",]
tssdata<-SCEGHiC::annotateTSS(species="Homo sapiens",genome="hg38")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
hicweight<-data.frame(
element1=c("CHN1","CHN1","CHN1","CHN1" ,"CHN1" ,"chr2_174901074_174901475","chr2_174901074_174901475",
"chr2_174901074_174901475","chr2_174901074_174901475","chr2_174990102_174990619","chr2_174990102_174990619",
"chr2_174990102_174990619","chr2_175048293_175048704","chr2_175048293_175048704","chr2_175167038_175169195"),
elemnet2=c("chr2_174901074_174901475", "chr2_174990102_174990619","chr2_175048293_175048704","chr2_175167038_175169195",
"chr2_175187467_175187717","chr2_174990102_174990619", "chr2_175048293_175048704","chr2_175167038_175169195",
"chr2_175187467_175187717","chr2_175048293_175048704","chr2_175167038_175169195","chr2_175187467_175187717",
"chr2_175167038_175169195","chr2_175187467_175187717","chr2_175187467_175187717"),
score=c(0.0016062358,0.0076253167,0.0031021570,0.0012148262,0.0010788392,0.0019968580,0.0012957845,
0.0009198567,0.0011448870,0.0023991885,0.0010785481, 0.0009664508,0.0012865316,0.0012122647,0.0057781939))
element<-unique(hicweight$element1,hicweight$element2)
weight<-normalizeHiCWeights(hicweight, "1, element)
""
"
devtools::document()
devtools::document()
links<-data.frame(gene="CTLA4",peak=c("chr2_203623664_203623982","chr2_203730093_203731243","chr2_203992800_203993979),
score=c(0.03623216,0.14814205,0.43240254))
"
""
devtools::document()
devtools::install()
devtools::document()
install_github()
devtools::install()
?Aggregate_datasets
?LinkPlot
library(GenomicRanges)
region<-GRanges(seqnames = Rle("chr2"), ranges = IRanges(start = 203617771, end = 204117772))
region
?Run_SCEG_HiC
?annotateTSS
?calculateHiCWeights
?connections_Plot
?coverPlot
?liftOverPeaks
?normalizeHiCWeights
?process_data
devtools::document()
devtools::install()
devtools::install()
?LinkPlot
links<-data.frame(gene="CTLA4",peak=c("chr2_203623664_203623982","chr2_203730093_203731243","chr2_203992800_203993979"),
score=c(0.03623216,0.14814205,0.43240254))
library(GenomicRanges)
region<-GRanges(seqnames = Rle("chr2"), ranges = IRanges(start = 203617771, end = 204117772))
geneanno<-annotateTSS("Homo sapiens", "hg38")
colnames(geneanno)<-c("chr","gene","tss")
links<-LinkPlot(links,geneanno,gene="CTLA4",region,lowcolor="blue",highcolor="orange",titlename="SCEG-HiC")
links
LinkPlot(links,geneanno,gene="CTLA4",region,lowcolor="blue",highcolor="orange",titlename="SCEG-HiC")
?Run_SCEG_HiC
?annotateTSS
?calculateHiCWeights
?connections_Plot
?coverPlot
?liftOverPeaks
?normalizeHiCWeights
data(multiomic_small)
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
fpath <- system.file("extdata", package="SCEGHiC")
gene<-c("TRABD2A","GNLY","MFSD6","CTLA4","LCLAT1","NCK2","GALM","TMSB10","ID2","CXCR4")
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
results_SCEGHiC<- Run_SCEG_HiC(SCEGdata, weight,focus_gene=gene)
fpath <- system.file("extdata", "multiomic_small_atac_fragments.tsv.gz", package="SCEGHiC")
library(Signac)
frags <- CreateFragmentObject(path = fpath, cells = colnames(multiomic_small))
Fragments(multiomic_small)<-frags
coverPlot(multiomic_small,focus_gene="CTLA4",species="Homo sapiens",genome="hg38",assay="peaks",SCEG_HiC_Result=results_SCEGHiC,SCEG_HiC_cutoff=0.01)
hicweight<-data.frame(
element1=c("CHN1","CHN1","CHN1","CHN1" ,"CHN1" ,"chr2_174901074_174901475","chr2_174901074_174901475",
"chr2_174901074_174901475","chr2_174901074_174901475","chr2_174990102_174990619","chr2_174990102_174990619",
"chr2_174990102_174990619","chr2_175048293_175048704","chr2_175048293_175048704","chr2_175167038_175169195"),
element2=c("chr2_174901074_174901475", "chr2_174990102_174990619","chr2_175048293_175048704","chr2_175167038_175169195",
"chr2_175187467_175187717","chr2_174990102_174990619", "chr2_175048293_175048704","chr2_175167038_175169195",
"chr2_175187467_175187717","chr2_175048293_175048704","chr2_175167038_175169195","chr2_175187467_175187717",
"chr2_175167038_175169195","chr2_175187467_175187717","chr2_175187467_175187717"),
score=c(0.0016062358,0.0076253167,0.0031021570,0.0012148262,0.0010788392,0.0019968580,0.0012957845,
0.0009198567,0.0011448870,0.0023991885,0.0010785481, 0.0009664508,0.0012865316,0.0012122647,0.0057781939))
element<-unique(hicweight$element1,hicweight$element2)
weight<-normalizeHiCWeights(hicweight, "1", element)
contacts <- hicweight[order(hicweight$score, decreasing = T), ]
dd <- seq(0, 1, length.out = length(unique(hicweight$score)))
dd1 <- as.matrix(table(contacts$score))
contacts$score <- rep(dd, times = rev(dd1))
xtabs_matrix <- as.matrix(xtabs(score ~ element1 + element2, data = contacts))
chrcontact <- matrix(0,
nrow = length(element), ncol = length(element),
dimnames = list(element, element)
)
chrcontact[rownames(xtabs_matrix), colnames(xtabs_matrix)] <- xtabs_matrix
chrcontact
xtabs_matrix
element<-unique(c(hicweight$element1,hicweight$element2))
weight<-normalizeHiCWeights(hicweight, "1", element)
devtools::document()
devtools::install()
?coverPlot
?coverPlot
data(multiomic_small)
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
devtools::document()
?coverPlot
devtools::document()
devtools::install()
?coverPlot
?coverPlot
devtools::document()
?coverPlot
data(multiomic_small)
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
fpath <- system.file("extdata", package="SCEGHiC")
gene<-c("TRABD2A","GNLY","MFSD6","CTLA4","LCLAT1","NCK2","GALM","TMSB10","ID2","CXCR4")
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
results_SCEGHiC<- Run_SCEG_HiC(SCEGdata, weight,focus_gene=gene)
fpath <- system.file("extdata", "multiomic_small_atac_fragments.tsv.gz", package="SCEGHiC")
library(Signac)
frags <- CreateFragmentObject(path = fpath, cells = colnames(multiomic_small))
Fragments(multiomic_small)<-frags
coverPlot(multiomic_small,focus_gene="CTLA4",species="Homo sapiens",genome="hg38",assay="peaks",SCEG_HiC_Result=results_SCEGHiC,SCEG_HiC_cutoff=0.01)
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
?coverPlot
?LinksPlot
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
fpath <- system.file("extdata", package="SCEGHiC")
gene<-c("TRABD2A","GNLY","MFSD6","CTLA4","LCLAT1","NCK2","GALM","TMSB10","ID2","CXCR4")
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
results_SCEGHiC<- Run_SCEG_HiC(SCEGdata, weight,focus_gene=gene)
fpath <- system.file("extdata", "multiomic_small_atac_fragments.tsv.gz", package="SCEGHiC")
library(Signac)
frags <- CreateFragmentObject(path = fpath, cells = colnames(multiomic_small))
Fragments(multiomic_small)<-frags
coverPlot(multiomic_small,focus_gene="CTLA4",species="Homo sapiens",genome="hg38",assay="peaks",SCEG_HiC_Result=results_SCEGHiC,SCEG_HiC_cutoff=0.01)
tssdata<-SCEGHiC::annotateTSS(species,genome)
species="Homo sapiens"
genome="hg38"
tssdata<-SCEGHiC::annotateTSS(species,genome)
colnames(tssdata)<-c("chr","gene","tss")
focus_gene="CTLA4"
gene.chr<-as.character(tssdata[tssdata$gene==focus_gene,]$chr)
gene.tss<-as.numeric(tssdata[tssdata$gene==focus_gene,]$tss)
region <- FindRegion(
object = object,
region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),
extend.upstream = upstream,
extend.downstream = downstream
)
# Convert region argument to genomic coordinates
# Region can be a string, name of a gene, or GRanges object
#' @importFrom methods is
FindRegion <- function(object,region,sep = c("-", "-"),assay = NULL,extend.upstream = 0,extend.downstream = 0) {
if (!is(object = region, class2 = "GRanges")) {
# first try to convert to coordinates, if not lookup gene
region <- tryCatch(
expr = suppressWarnings(
expr = StringToGRanges(regions = region, sep = sep)
),
error = function(x) {
region <- LookupGeneCoords(
object = object,
assay = assay,
gene = region
)
return(region)
}
)
if (is.null(x = region)) {
stop("Gene not found")
}
}
region <- suppressWarnings(expr = Extend(
x = region,
upstream = extend.upstream,
downstream = extend.downstream
)
)
return(region)
}
region <- FindRegion(
object = object,
region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),
extend.upstream = upstream,
extend.downstream = downstream
)
upstream=250000
downstream=250000
region <- FindRegion(
object = object,
region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),
extend.upstream = upstream,
extend.downstream = downstream
)
SCEG_HiC_cutoff=0.01
HIC_Result=NULL
!(is.null(HIC_Result)&is.null(HIC_cutoff))
HIC_cutoff=0
!(is.null(HIC_Result)&is.null(HIC_cutoff))
is.null(HIC_Result)
is.null(HIC_cutoff)
is.null(HIC_Result)
!(is.null(HIC_Result))
coverPlot<-function(object,focus_gene,species,genome,assay=NULL,upstream=250000,downstream=250000,HIC_Result=NULL,HIC_cutoff=0,SCEG_HiC_Result=NULL,SCEG_HiC_cutoff=0,correlation=NULL,cells=NULL,cellnames=NULL){
tssdata<-SCEGHiC::annotateTSS(species,genome)
colnames(tssdata)<-c("chr","gene","tss")
gene.chr<-as.character(tssdata[tssdata$gene==focus_gene,]$chr)
gene.tss<-as.numeric(tssdata[tssdata$gene==focus_gene,]$tss)
region <- FindRegion(
object = object,
region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),
extend.upstream = upstream,
extend.downstream = downstream
)
if(!(is.null(HIC_Result))){
HIC_Result<-HIC_Result[HIC_Result$score > HIC_cutoff, ]
HIC_link<-LinksPlot(HIC_Result,tssdata,focus_gene,region,"blue","black","Hi-C")
} else{
HIC_link<-NULL
}
if(!(is.null(SCEG_HiC_Result)&is.null(SCEG_HiC_cutoff))){
if ("peak2" %in% colnames(SCEG_HiC_Result)){
SCEG_HiC_Result<-SCEG_HiC_Result[,c("gene","peak2","score")]
colnames(SCEG_HiC_Result)<-c("gene","peak","score")
}
SCEG_HiC_Result<-SCEG_HiC_Result[SCEG_HiC_Result$score > SCEG_HiC_cutoff, ]
SCEG_HiC_link<-LinksPlot(SCEG_HiC_Result,tssdata,focus_gene,region,"blue","orange","SCEG-HiC")
}else{
SCEG_HiC_link<-NULL
}
if(!is.null(correlation)){
correlation_link<-LinksPlot(correlation,tssdata,focus_gene,region,"blue","red","correlation")
}else{
correlation_link<-NULL
}
p1<-PeakPlot(object,region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),assay=assay,color="red",extend.upstream = upstream,extend.downstream=downstream)
if(is.null(cellnames)){
p2<-CoveragePlot(
object = object,
assay=assay,
region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),
extend.upstream = upstream,
extend.downstream = downstream,
peaks=FALSE,
links = FALSE,
idents=cells
)
obj.groups <- as.character(Idents(object))
}else{
p2<-CoveragePlot(
object = object,
assay=assay,
region = paste0(gene.chr,"-",gene.tss,"-",gene.tss+1),
extend.upstream = upstream,
extend.downstream = downstream,
peaks=FALSE,
links = FALSE,
idents=cells,
group.by = cellnames
)
obj.groups <-as.character(object@meta.data[[cellnames]])
}
if(is.null(cells)){
nident <- length(x = unique(x = obj.groups))
bulk.height <- (1 / nident) * 10
}else{
bulk.height<-min(2*length(cells),10)
}
heights <- c(1.5, bulk.height, 1.5,  1, 1, 1.5)
p<-CombineTracks(
plotlist = list(HIC_link,p2[[1]][[1]],correlation_link,p2[[1]][[2]],p1,SCEG_HiC_link),
heights = heights) & theme(
legend.key.size = unit(x = 1/2, units = "lines"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)
)
return(p)
}
coverPlot(multiomic_small,focus_gene="CTLA4",species="Homo sapiens",genome="hg38",assay="peaks",SCEG_HiC_Result=results_SCEGHiC,SCEG_HiC_cutoff=0.01)
library(Seurat)
coverPlot(multiomic_small,focus_gene="CTLA4",species="Homo sapiens",genome="hg38",assay="peaks",SCEG_HiC_Result=results_SCEGHiC,SCEG_HiC_cutoff=0.01)
library(ggplot2)
coverPlot(multiomic_small,focus_gene="CTLA4",species="Homo sapiens",genome="hg38",assay="peaks",SCEG_HiC_Result=results_SCEGHiC,SCEG_HiC_cutoff=0.01)
devtools::document()
load_all()
rm(list=ls())
devtools::document()
?coverPlot
devtools::install()
devtools::install()
?coverPlot
devtools::document()
?coverPlot
?LinksPlot
devtools::document()  # 或者 roxygen2::roxygenise()
data(multiomic_small)
SCEGdata<-process_data(multiomic_small,aggregate = FALSE, celltype = "0")
gene=multiomic_small@assays[["RNA"]]@data@Dimnames[[1]]
fpath <- system.file("extdata", package="SCEGHiC")
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
devtools::load_all(".")
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
devtools::document()
library(SCEGHiC)
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
devtools::document()
frags <- CreateFragmentObject(path = fpath, cells = colnames(multiomic_small))
fpath <- system.file("extdata", package="SCEGHiC")
frags <- CreateFragmentObject(path = fpath, cells = colnames(multiomic_small))
fpath <- system.file("extdata", package="SCEGHiC")
fpath
fpath <- system.file("extdata", "multiomic_small_atac_fragments.tsv.gz", package="SCEGHiC")
fpath
?CoverPlot
devtools::build()
?CoverPlot
devtools::check()
data(multiomic_small)
#Preprocess data
SCEGdata<-process_data(multiomic_small,k_neigh=5,max_overlap=0.5)
gene=multiomic_small@assays[["RNA"]]@data@Dimnames[[1]]
fpath <- system.file("extdata", package="SCEGHiC")
#Calculate weight
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
renv::restore()  # 恢复包依赖
fpath<-"C:/Users/86177/Documents/SCEG/SCEGHiC/inst/extdata/hg38ToHg19.over.chain"
weight<-calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
fpath
calculateHiCWeights(SCEGdata, species="Homo sapiens", genome="hg38", focus_gene=gene,  averHicPath=fpath)
fpath <- system.file("extdata", package = "SCEGHiC")
SCEGdata <- process_data(multiomic_small, k_neigh = 5, max_overlap = 0.5)
devtools::document()
devtools::install()
SCEGdata <- process_data(multiomic_small, k_neigh = 5, max_overlap = 0.5)
gene=multiomic_small@assays[["RNA"]]@data@Dimnames[[1]]
fpath <- system.file("extdata", package = "SCEGHiC")
weight <- calculateHiCWeights(SCEGdata, species = "Homo sapiens", genome = "hg38", focus_gene = gene, averHicPath = fpath)
fpath
usethis::use_test("utils")
find.package("SCEGHiC", lib.loc = NULL, quiet = TRUE)
file.path(packagePath, "extdata", "hg38ToHg19.over.chain.gz")
packagePath <- find.package("SCEGHiC", lib.loc = NULL, quiet = TRUE)
f <- file.path(packagePath, "extdata", "hg38ToHg19.over.chain.gz")
f
fpath <- system.file("extdata", "hg38ToHg19.over.chain", package = "SCEGHiC")
fpath
usethis::use_testthat()
devtools::document()
devtools::install()
devtools::install()
?liftOverPeaks
devtools::document()
library(SCEGHiC)
?liftOverPeaks
install.packages
install.packages("vdiffr")
SCEGdata <- process_data(multiomic_small, k_neigh = 5, max_overlap = 0.5)
View(SCEGdata)
class
class(SCEGdata)
names(SCEGdata)
c("rna","atac")%in%names(SCEGdata)
gene=multiomic_small@assays[["RNA"]]@data@Dimnames[[1]]
fpath <- system.file("extdata", package = "SCEGHiC")
weight <- calculateHiCWeights(SCEGdata, species = "Homo sapiens", genome = "hg38", focus_gene = gene, averHicPath = fpath)
View(weight)
length(weight)
View(weight)
results_SCEGHiC <- Run_SCEG_HiC(SCEGdata, weight, focus_gene = gene)
class(results_SCEGHiC)
peaks <- c(
"chr2-973888-974755", "chr2-3195868-3196264", "chr2-3242398-3243508", "chr2-6863856-6866834", "chr2-6913141-6914394",
"chr2-6924663-6924972", "chr2-6999095-6999554", "chr2-7007713-7008819", "chr2-7083945-7084032", "chr2-7097148-7098029"
)
split_peaks <- do.call("rbind", strsplit(as.character(peaks), "-", fixed = TRUE))
peakinfo <- liftOverPeaks(split_peaks, "hg38")
View(peakinfo)
View(peakinfo)
liftover_peaks <- do.call("rbind", strsplit(peakinfo$peak, "-", fixed = TRUE))
View(liftover_peaks)
liftover_peaks <- do.call("rbind", strsplit(peakinfo$peak, "_", fixed = TRUE))
View(liftover_peaks)
sum(peakinfo$start==liftover_peaks[,2])
sum(peakinfo$end==liftover_peaks[,3])
class(peakinfo$midpoint)
hicweight <- data.frame( element1 = c("CHN1", "CHN1", "CHN1", "CHN1", "CHN1", "chr2_174901074_174901475",
"chr2_174901074_174901475","chr2_174901074_174901475", "chr2_174901074_174901475",
"chr2_174990102_174990619", "chr2_174990102_174990619", "chr2_174990102_174990619",
"chr2_175048293_175048704", "chr2_175048293_175048704", "chr2_175167038_175169195"),
element2 = c( "chr2_174901074_174901475", "chr2_174990102_174990619", "chr2_175048293_175048704",
"chr2_175167038_175169195","chr2_175187467_175187717", "chr2_174990102_174990619",
"chr2_175048293_175048704", "chr2_175167038_175169195","chr2_175187467_175187717",
"chr2_175048293_175048704", "chr2_175167038_175169195", "chr2_175187467_175187717",
"chr2_175167038_175169195", "chr2_175187467_175187717", "chr2_175187467_175187717"),
score = c(0.0016062358, 0.0076253167, 0.0031021570, 0.0012148262, 0.0010788392, 0.0019968580,
0.0012957845,0.0009198567, 0.0011448870, 0.0023991885, 0.0010785481, 0.0009664508,
0.0012865316, 0.0012122647, 0.0057781939))
element <- unique(c(hicweight$element1, hicweight$element2))
weight <- normalizeHiCWeights(hicweight, "1", element)
View(weight)
dim(weight)[1]
dim(weight)[2]
View(weight)
diag(weight)
diag(weight)==1
expect_true(diag(weight)==1)
sum(diag(weight))
devtools::build()
devtools::check()
usethis::use_package("vdiffr",type="Imports")
devtools::check()
devtools::build()
