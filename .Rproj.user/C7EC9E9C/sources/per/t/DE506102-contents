---
title: "SCEG-HiC on paired scRNA-seq and scATAC-seq data of mouse skin-aggregate"
author: "XuanLiang"
date: 'Compiled: `r format(Sys.Date(), "%B %d, %Y")`'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/picb/bigdata/project/liangxuan/data/mouse/skin")
options(future.globals.maxSize = 20 * 1024^3)
```

In this vignette,we’ll demonstrate  SCEG-HiC’s capability of inferring gene-enhancer by applying it to paired scRNA-seq and scATAC-seq data. In this vignette we'll be using a publicly available SHARE-seq dataset for mouse skin,and aggregating the data for processing.

The implementent of SCEG-HiC is seamlessly compatible with the workflow of Seurat/Signac package, SCEG-HiC pipeline consists of the following four major parts:

* Set up a Seurat object.
* Infer gene-enhancer using SCEG-HiC by taking as input input a Seurat object and the bulk average Hi-C.
* Visualize the gene-enhancer.

<details>
  <summary>**View data download code**</summary>

You can download the required data by running the following lines in a shell ,data from [GSE140203](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE140203):

```{sh eval=FALSE}
wget https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4156nnn/GSM4156597/suppl/GSM4156597%5Fskin.late.anagen.peaks.bed.gz
wget https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4156nnn/GSM4156597/suppl/GSM4156597%5Fskin.late.anagen.barcodes.txt.gz
wget https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4156nnn/GSM4156597/suppl/GSM4156597%5Fskin.late.anagen.counts.txt.gz
wget https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4156nnn/GSM4156597/suppl/GSM4156597%5Fskin%5Fcelltype.txt.gz
wget https://ftp.ncbi.nlm.nih.gov/geo/samples/GSM4156nnn/GSM4156608/suppl/GSM4156608%5Fskin.late.anagen.rna.counts.txt.gz
```

</details>

## Load the required libraries
```{r message=FALSE, warning=FALSE}
library(SCEGHiC)
library(Seurat)
library(Signac)
library(EnsDb.Mmusculus.v79) # For mouse skin
library(dplyr)
library(Matrix)
library(GenomicRanges)
library(ggplot2)
```

## Set up a Seurat object
```{r message=FALSE, warning=FALSE}
# load the RNA and ATAC data
ct <- read.table("GSM4156597_skin_celltype.txt", header = T, sep = "\t")
# first column: atac barcode
# second column: rna barcode
# third column: annotated cell type from the paper

rna.count <- read.table("GSM4156608_skin.late.anagen.rna.counts.txt.gz", header = T, row.names = 1)

# match the rna.count with the cell type labels
any(is.na(match(ct$rna.bc, colnames(rna.count))))
rna.count <- rna.count[, match(ct$rna.bc, colnames(rna.count))]

# The barcode file is the same as the annotation ct; omitted
colnames(rna.count) <- ct$atac.bc
peak.barcodes <- scan("GSM4156597_skin.late.anagen.barcodes.txt.gz", what = "")
all(ct$rna.bc == peak.barcodes)

# Read in the peak matrix: stored as Market matrix
peak.count <- readMM("GSM4156597_skin.late.anagen.counts.txt.gz")
dim(peak.count)
peak.bed <- read.delim("GSM4156597_skin.late.anagen.peaks.bed.gz", header = FALSE)
peak.granges <- GRanges(seqnames = peak.bed$V1, ranges = IRanges(st = peak.bed$V2, end = peak.bed$V3))
rownames(peak.count) <- paste(peak.granges)
colnames(peak.count) <- ct$atac.bc
```

```{r message=FALSE, warning=FALSE}
# create a Seurat object containing the RNA data
skin <- CreateSeuratObject(counts = rna.count, assay = "RNA")

# Now add in the ATAC-seq data
# we'll only use peaks in standard chromosomes
grange.use <- seqnames(peak.granges) %in% standardChromosomes(peak.granges)
peak.count <- peak.count[as.vector(grange.use), ]
peak.granges <- peak.granges[as.vector(grange.use)]

# get gene annotations for mm10
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevels(annotations) <- paste0("chr", seqlevels(annotations))
genome(annotations) <- "mm10"

# create ATAC assay and add it to the object
peak.count <- peak.count[rowSums(peak.count) > 10, ]
fragpath <- "GSM4156597_skin.late.anagen.atac.fragments.mybed.gz"
skin[["ATAC"]] <- CreateChromatinAssay(
  counts = peak.count,
  sep = c(":", "-"),
  fragments = fragpath,
  genome = "mm10",
  annotation = annotations
)
# annotate cell types
skin$celltype <- ct[match(colnames(skin), ct[, 1]), 3]
```

```{r}
skin
```

```{r fig.width = 18, fig.height = 6,  message=FALSE, warning=FALSE}
# calculate mitochondrial QC metrics
skin[["percent.mt"]] <- PercentageFeatureSet(skin, pattern = "^MT-")

# Quality control
DefaultAssay(skin) <- "ATAC"
skin <- NucleosomeSignal(skin)
skin <- TSSEnrichment(skin)
save(skin, file = "skin.rda")
VlnPlot(
  object = skin,
  features = c("nCount_RNA", "nCount_ATAC", "TSS.enrichment", "nucleosome_signal"),
  ncol = 4,
  pt.size = 0
)
```


```{r}
# filter out low quality cells
skin <- subset(
  x = skin,
  subset = nCount_ATAC < 20000 &
    nCount_RNA < 5000 &
    nCount_ATAC > 500 &
    nCount_RNA > 500 &
    nucleosome_signal < 1 &
    TSS.enrichment > 1
)
skin
```

```{r}
# call peaks using MACS2
peaks <- CallPeaks(skin)
# remove peaks on nonstandard chromosomes and in genomic blacklist regions
peaks <- keepStandardChromosomes(peaks, pruning.mode = "coarse")
peaks <- subsetByOverlaps(x = peaks, ranges = blacklist_mm10, invert = TRUE)
# quantify counts in each peak
macs2_counts <- FeatureMatrix(
  fragments = Fragments(skin),
  features = peaks,
  cells = colnames(skin)
)
# create a new assay using the MACS2 peak set and add it to the Seurat object
skin[["peaks"]] <- CreateChromatinAssay(
  counts = macs2_counts,
  fragments = fragpath,
  annotation = annotations
)
skin
```

### RNA analysis
```{r results='hide', message=FALSE, warning=FALSE}
DefaultAssay(skin) <- "RNA"
skin <- SCTransform(skin)
skin <- RunPCA(skin)
```

### ATAC analysis
```{r message=FALSE, warning=FALSE}
DefaultAssay(skin) <- "peaks"
skin <- FindTopFeatures(skin, min.cutoff = 5)
skin <- RunTFIDF(skin)
skin <- RunSVD(skin)
```

### Intergration analysis
```{r fig.width = 8, fig.height = 8,message=FALSE, warning=FALSE}
# build a joint neighbor graph using both assays
skin <- FindMultiModalNeighbors(
  object = skin,
  reduction.list = list("pca", "lsi"),
  dims.list = list(1:50, 2:40),
  modality.weight.name = "RNA.weight",
  verbose = TRUE
)

# build a joint UMAP visualization
skin <- RunUMAP(
  object = skin,
  nn.name = "weighted.nn",
  assay = "RNA",
  verbose = TRUE
)

DimPlot(skin, reduction = "umap", group.by = "celltype", label = TRUE, label.size = 2.5, repel = TRUE)+ NoLegend()
```

```{r include=FALSE}
save(skin, file = "skin_multiomic.rda")
```

## Infer gene-enhancer using SCEG-HiC 

### Preprocess data
Here, we have aggregated with paired scRNA-seq and scATAC-seq data.By default, the scATAC-seq counts are binarized.

```{r}
SCEGdata <- process_data(skin, cellnames = "celltype", max_overlap = 0.5)
```
### Calculate weight
In this case, we select the mouse average Hi-C data for analysis.

<details>
  <summary>**Select  highly variable features**</summary>
You can select 3000 highly variable features:

```{r eval=FALSE}
gene <- skin@assays[["SCT"]]@var.features
weight <- calculateHiCWeights(SCEGdata, species = "Mus musculus", genome = "mm10", focus_gene = gene, averHicPath = "/picb/bigdata/project/liangxuan/data/mouse_contact/average")
```

</details>

```{r }
# For example, Calculate weight for Basal's markers: Krt5 and Krt14
weight <- calculateHiCWeights(SCEGdata, species = "Mus musculus", genome = "mm10", focus_gene = c("Krt5", "Krt14"), averHicPath = "/picb/bigdata/project/liangxuan/data/mouse_contact/average")
```
### Run model
SCEG HiC uses wglasso machine learning method and normalizes the bulk average Hi-C matrix using rank score.
```{r }
# For example, Run model for Basal's markers: Krt5 and Krt14
results_SCEGHiC <- Run_SCEG_HiC(SCEGdata, weight, focus_gene = c("Krt5", "Krt14"))
```

## Visualize the gene-enhancer 

### Visualize the links

```{r,message=FALSE,warning=FALSE}
temp <- tempfile()
download.file("https://hgdownload2.soe.ucsc.edu/goldenPath/mm10/bigZips/genes/mm10.refGene.gtf.gz", temp)
gene_anno <- rtracklayer::readGFF(temp)
unlink(temp)
# rename some columns to match requirements
gene_anno$chromosome <- gene_anno$seqid
gene_anno$gene <- gene_anno$gene_id
gene_anno$transcript <- gene_anno$transcript_id
gene_anno$symbol <- gene_anno$gene_name
```

visualize the links of Krt5
```{r,fig.width = 12, fig.height = 5,warning=FALSE}
connections_Plot(results_SCEGHiC, species = "Mus musculus", genome = "mm10", focus_gene = "Krt5", cutoff = 0.01, gene_anno = gene_anno)
```

visualize the links of Krt14
```{r,fig.width = 12, fig.height = 5,warning=FALSE}
connections_Plot(results_SCEGHiC, species = "Mus musculus", genome = "mm10", focus_gene = "Krt14", cutoff = 0.01, gene_anno = gene_anno)
```



### Coverage plot and visualize the links of Krt5 and Krt14
Here, the truth of Basal is sourced from the [GSE197024](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE197024), and the correlation is calculated by computing the Pearson correlation coefficient between each gene and enhancer.

```{r, fig.width = 15.5, fig.height = 18,warning=FALSE}
# load the truth of Basal data
load("truth_Basal.rda")

## load correlation data
load("correlation.rda")

# Coverage plot and visualize the links of Krt5

p1 <- coverPlot(skin, focus_gene = "Krt5", species = "Mus musculus", genome = "mm10", assay = "peaks", HIC_Result = truth_Basal, SCEG_HiC_Result = results_SCEGHiC, SCEG_HiC_cutoff = 0.01, correlation = correlation, cells = c("Basal", "Spinous", "Granular"), cellnames = "celltype")

# Coverage plot and visualize the links of Krt14

p2 <- coverPlot(skin, focus_gene = "Krt14", species = "Mus musculus", genome = "mm10", assay = "peaks", HIC_Result = truth_Basal, SCEG_HiC_Result = results_SCEGHiC, SCEG_HiC_cutoff = 0.01, correlation = correlation, cells = c("Basal", "Spinous", "Granular"), cellnames = "celltype")

patchwork::wrap_plots(p1, p2, ncol = 1)
```

<details>
  <summary>**Session Info**</summary>

```{r}
sessionInfo()
```

</details>
